@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject AuthenticationService AuthService

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <!-- Drawer de Navegación -->
    <MudDrawer @bind-Open="@drawerOpen" 
               ClipMode="DrawerClipMode.Always" 
               Elevation="1"
               Variant="DrawerVariant.Mini">
        
        <!-- Header del Drawer -->
        <div class="pa-4 d-flex align-center">
            @if (drawerOpen)
            {
                <MudIcon Icon="@Icons.Material.Filled.Public" 
                         Color="Color.Primary" 
                         Size="Size.Large" 
                         Class="me-3" />
                <div>
                    <MudText Typo="Typo.h6" Color="Color.Primary">Sphere</MudText>
                    <MudText Typo="Typo.caption" Color="Color.Secondary">Time Control</MudText>
                </div>
            }
            else
            {
                <MudIcon Icon="@Icons.Material.Filled.Public" 
                         Color="Color.Primary" 
                         Size="Size.Large" />
            }
        </div>

        <MudDivider />

        <!-- Navegación -->
        <NavMenu />
        
    </MudDrawer>

    <!-- AppBar Superior -->
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" 
                       Color="Color.Inherit" 
                       Edge="Edge.Start" 
                       OnClick="@ToggleDrawer" />
        
        <MudSpacer />
        
        <!-- Notificaciones -->
        <MudBadge Content="3" 
                  Color="Color.Error" 
                  Overlap="true" 
                  Class="me-3">
            <MudIconButton Icon="@Icons.Material.Filled.Notifications" 
                           Color="Color.Inherit" />
        </MudBadge>

        <!-- Información del Usuario -->
        <MudMenu Icon="@Icons.Material.Filled.AccountCircle" 
                 Color="Color.Inherit" 
                 Direction="Direction.Bottom" 
                 OffsetY="true">
            <div class="pa-4" style="min-width: 200px;">
                <MudText Typo="Typo.body2" Class="mb-1">
                    <strong>@currentUser</strong>
                </MudText>
                <MudText Typo="Typo.caption" Color="Color.Secondary">
                    Super Administrador
                </MudText>
            </div>
            <MudDivider />
            <MudMenuItem Icon="@Icons.Material.Filled.Person">
                Mi Perfil
            </MudMenuItem>
            <MudMenuItem Icon="@Icons.Material.Filled.Settings">
                Configuración
            </MudMenuItem>
            <MudDivider />
            <MudMenuItem Icon="@Icons.Material.Filled.Logout" 
                         OnClick="@HandleLogout">
                Cerrar Sesión
            </MudMenuItem>
        </MudMenu>
    </MudAppBar>

    <!-- Contenido Principal -->
    <MudMainContent>
        <div class="pa-4" style="min-height: calc(100vh - 64px);">
            @Body
        </div>
    </MudMainContent>
</MudLayout>

@code {
    private bool drawerOpen = true;
    private string currentUser = "admin@spheretimecontrol.com";

    protected override async Task OnInitializedAsync()
    {
        // Verificar autenticación
        if (!await AuthService.IsAuthenticatedAsync())
        {
            Navigation.NavigateTo("/login");
            return;
        }

        // Cargar información del usuario
        var userInfo = await AuthService.GetCurrentUserAsync();
        if (userInfo != null)
        {
            currentUser = userInfo.Email ?? "Usuario";
        }
    }

    private void ToggleDrawer()
    {
        drawerOpen = !drawerOpen;
    }

    private async Task HandleLogout()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/login");
    }
}