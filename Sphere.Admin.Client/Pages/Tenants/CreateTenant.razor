@page "/tenants/create"
@inject ApiService ApiService
@inject NotificationService NotificationService
@inject NavigationManager Navigation

<PageTitle>Nueva Empresa - Sphere Admin</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="py-4">
    
    <!-- Breadcrumb -->
    <MudBreadcrumbs Items="_breadcrumbs" Class="mb-4" />
    
    <!-- Header -->
    <div class="d-flex justify-space-between align-center mb-6">
        <div>
            <MudText Typo="Typo.h4" Class="mud-text-primary font-weight-bold">
                Nueva Empresa
            </MudText>
            <MudText Typo="Typo.body1" Class="mud-text-secondary">
                Complete la información para registrar una nueva empresa en el sistema
            </MudText>
        </div>
        
        <MudButton Variant="Variant.Outlined"
                   Color="Color.Default"
                   StartIcon="@Icons.Material.Filled.ArrowBack"
                   OnClick="@(() => Navigation.NavigateTo("/tenants"))">
            Volver a Lista
        </MudButton>
    </div>

    <!-- Formulario -->
    <EditForm Model="@_model" OnValidSubmit="HandleSubmit">
        <DataAnnotationsValidator />
        
        <MudGrid>
            <!-- Información básica -->
            <MudItem xs="12" lg="8">
                <MudCard Class="mb-4">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <div class="d-flex align-center">
                                <MudIcon Icon="@Icons.Material.Filled.Business" Class="mr-3" />
                                <MudText Typo="Typo.h6">Información de la Empresa</MudText>
                            </div>
                        </CardHeaderContent>
                    </MudCardHeader>
                    
                    <MudCardContent>
                        <MudGrid>
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="_model.Name"
                                              For="@(() => _model.Name)"
                                              Label="Nombre de la Empresa"
                                              Variant="Variant.Outlined"
                                              Required="true"
                                              HelperText="Nombre oficial de la empresa"
                                              OnTextChanged="OnCompanyNameChanged" />
                            </MudItem>
                            
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="_model.Subdomain"
                                              For="@(() => _model.Subdomain)"
                                              Label="Subdominio"
                                              Variant="Variant.Outlined"
                                              Required="true"
                                              HelperText="URL de acceso: https://[subdominio].sphere-control.com"
                                              Adornment="Adornment.End"
                                              AdornmentText=".sphere-control.com" />
                            </MudItem>
                            
                            <MudItem xs="12">
                                <MudTextField @bind-Value="_model.Description"
                                              For="@(() => _model.Description)"
                                              Label="Descripción"
                                              Variant="Variant.Outlined"
                                              Lines="3"
                                              HelperText="Breve descripción de la empresa (opcional)" />
                            </MudItem>
                            
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="_model.Address"
                                              For="@(() => _model.Address)"
                                              Label="Dirección"
                                              Variant="Variant.Outlined"
                                              HelperText="Dirección principal de la empresa" />
                            </MudItem>
                            
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="_model.Phone"
                                              For="@(() => _model.Phone)"
                                              Label="Teléfono"
                                              Variant="Variant.Outlined"
                                              HelperText="Teléfono de contacto principal" />
                            </MudItem>
                        </MudGrid>
                    </MudCardContent>
                </MudCard>

                <!-- Información de contacto -->
                <MudCard Class="mb-4">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <div class="d-flex align-center">
                                <MudIcon Icon="@Icons.Material.Filled.Person" Class="mr-3" />
                                <MudText Typo="Typo.h6">Contacto Principal</MudText>
                            </div>
                        </CardHeaderContent>
                    </MudCardHeader>
                    
                    <MudCardContent>
                        <MudGrid>
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="_model.ContactFirstName"
                                              For="@(() => _model.ContactFirstName)"
                                              Label="Nombre"
                                              Variant="Variant.Outlined"
                                              Required="true" />
                            </MudItem>
                            
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="_model.ContactLastName"
                                              For="@(() => _model.ContactLastName)"
                                              Label="Apellidos"
                                              Variant="Variant.Outlined"
                                              Required="true" />
                            </MudItem>
                            
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="_model.ContactEmail"
                                              For="@(() => _model.ContactEmail)"
                                              Label="Email"
                                              Variant="Variant.Outlined"
                                              InputType="InputType.Email"
                                              Required="true"
                                              HelperText="Este será el usuario administrador principal" />
                            </MudItem>
                            
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="_model.ContactPhone"
                                              For="@(() => _model.ContactPhone)"
                                              Label="Teléfono de Contacto"
                                              Variant="Variant.Outlined" />
                            </MudItem>
                            
                            <MudItem xs="12">
                                <MudTextField @bind-Value="_model.ContactPosition"
                                              For="@(() => _model.ContactPosition)"
                                              Label="Cargo/Posición"
                                              Variant="Variant.Outlined"
                                              HelperText="Ej: Gerente de RRHH, Director, etc." />
                            </MudItem>
                        </MudGrid>
                    </MudCardContent>
                </MudCard>
            </MudItem>

            <!-- Panel lateral -->
            <MudItem xs="12" lg="4">
                <!-- Configuración de licencia -->
                <MudCard Class="mb-4">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <div class="d-flex align-center">
                                <MudIcon Icon="@Icons.Material.Filled.VerifiedUser" Class="mr-3" />
                                <MudText Typo="Typo.h6">Licencia</MudText>
                            </div>
                        </CardHeaderContent>
                    </MudCardHeader>
                    
                    <MudCardContent>
                        <MudSelect @bind-Value="_model.LicenseType"
                                   For="@(() => _model.LicenseType)"
                                   Label="Tipo de Licencia"
                                   Variant="Variant.Outlined"
                                   Required="true">
                            <MudSelectItem Value="@("Basic")">
                                <div class="d-flex flex-column">
                                    <MudText Typo="Typo.body2" Class="font-weight-bold">Básica</MudText>
                                    <MudText Typo="Typo.caption" Class="mud-text-secondary">Hasta 10 empleados</MudText>
                                </div>
                            </MudSelectItem>
                            <MudSelectItem Value="@("Professional")">
                                <div class="d-flex flex-column">
                                    <MudText Typo="Typo.body2" Class="font-weight-bold">Profesional</MudText>
                                    <MudText Typo="Typo.caption" Class="mud-text-secondary">Hasta 50 empleados</MudText>
                                </div>
                            </MudSelectItem>
                            <MudSelectItem Value="@("Enterprise")">
                                <div class="d-flex flex-column">
                                    <MudText Typo="Typo.body2" Class="font-weight-bold">Empresarial</MudText>
                                    <MudText Typo="Typo.caption" Class="mud-text-secondary">Empleados ilimitados</MudText>
                                </div>
                            </MudSelectItem>
                        </MudSelect>
                        
                        <MudNumericField @bind-Value="_model.MaxEmployees"
                                         For="@(() => _model.MaxEmployees)"
                                         Label="Máximo de Empleados"
                                         Variant="Variant.Outlined"
                                         Min="1"
                                         Class="mt-4"
                                         HelperText="0 = Ilimitado" />
                    </MudCardContent>
                </MudCard>

                <!-- Configuración inicial -->
                <MudCard Class="mb-4">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <div class="d-flex align-center">
                                <MudIcon Icon="@Icons.Material.Filled.Settings" Class="mr-3" />
                                <MudText Typo="Typo.h6">Configuración</MudText>
                            </div>
                        </CardHeaderContent>
                    </MudCardHeader>
                    
                    <MudCardContent>
                        <MudSwitch T="bool"
                                   @bind-Value="_model.IsActive"
                                   Label="Empresa Activa"
                                   Color="Color.Success"
                                   Class="mb-3" />
                        
                        <MudSwitch T="bool"
                                   @bind-Value="_model.SendWelcomeEmail"
                                   Label="Enviar Email de Bienvenida"
                                   Color="Color.Primary"
                                   Class="mb-3" />
                        
                        <MudSwitch T="bool"
                                   @bind-Value="_model.CreateSampleData"
                                   Label="Crear Datos de Ejemplo"
                                   Color="Color.Info"
                                   HelperText="Incluye empleados y departamentos de ejemplo" />
                    </MudCardContent>
                </MudCard>

                <!-- Acciones -->
                <MudCard>
                    <MudCardContent>
                        <MudStack Spacing="3">
                            <MudButton ButtonType="ButtonType.Submit"
                                       Variant="Variant.Filled"
                                       Color="Color.Primary"
                                       Size="Size.Large"
                                       FullWidth="true"
                                       Disabled="@_isLoading"
                                       StartIcon="@Icons.Material.Filled.Save">
                                @if (_isLoading)
                                {
                                    <MudProgressCircular Class="mr-2" Size="Size.Small" Indeterminate="true" />
                                    <span>Creando Empresa...</span>
                                }
                                else
                                {
                                    <span>Crear Empresa</span>
                                }
                            </MudButton>
                            
                            <MudButton Variant="Variant.Outlined"
                                       Color="Color.Default"
                                       Size="Size.Large"
                                       FullWidth="true"
                                       OnClick="@(() => Navigation.NavigateTo("/tenants"))"
                                       Disabled="@_isLoading">
                                Cancelar
                            </MudButton>
                        </MudStack>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        </MudGrid>
    </EditForm>
</MudContainer>

@code {
    private CreateTenantModel _model = new();
    private bool _isLoading = false;

    private List<BreadcrumbItem> _breadcrumbs = new()
    {
        new BreadcrumbItem("Dashboard", href: "/", icon: Icons.Material.Filled.Home),
        new BreadcrumbItem("Empresas", href: "/tenants", icon: Icons.Material.Filled.Business),
        new BreadcrumbItem("Nueva Empresa", href: null, disabled: true)
    };

    private void OnCompanyNameChanged(string companyName)
    {
        if (string.IsNullOrEmpty(_model.Subdomain) || _model.Subdomain == GenerateSubdomain(_model.Name))
        {
            _model.Subdomain = GenerateSubdomain(companyName);
        }
    }

    private string GenerateSubdomain(string companyName)
    {
        if (string.IsNullOrEmpty(companyName)) return string.Empty;
        
        return companyName
            .ToLower()
            .Replace(" ", "-")
            .Replace(".", "")
            .Replace(",", "")
            .Replace("(", "")
            .Replace(")", "")
            .Replace("&", "y")
            .Replace("ñ", "n")
            .Replace("á", "a")
            .Replace("é", "e")
            .Replace("í", "i")
            .Replace("ó", "o")
            .Replace("ú", "u");
    }

    private async Task HandleSubmit()
    {
        _isLoading = true;
        
        try
        {
            // TODO: Implementar llamada a la API
            await Task.Delay(2000); // Simular proceso de creación
            
            NotificationService.ShowSuccess($"Empresa '{_model.Name}' creada correctamente.");
            
            if (_model.SendWelcomeEmail)
            {
                NotificationService.ShowInfo("Email de bienvenida enviado al contacto principal.");
            }
            
            Navigation.NavigateTo("/tenants");
        }
        catch (Exception ex)
        {
            NotificationService.ShowError($"Error al crear empresa: {ex.Message}");
        }
        finally
        {
            _isLoading = false;
        }
    }

    public class CreateTenantModel
    {
        [Required(ErrorMessage = "El nombre de la empresa es requerido")]
        [StringLength(100, ErrorMessage = "El nombre no puede exceder 100 caracteres")]
        public string Name { get; set; } = string.Empty;

        [Required(ErrorMessage = "El subdominio es requerido")]
        [StringLength(50, ErrorMessage = "El subdominio no puede exceder 50 caracteres")]
        [RegularExpression(@"^[a-z0-9-]+$", ErrorMessage = "Solo se permiten letras minúsculas, números y guiones")]
        public string Subdomain { get; set; } = string.Empty;

        [StringLength(500, ErrorMessage = "La descripción no puede exceder 500 caracteres")]
        public string Description { get; set; } = string.Empty;

        [StringLength(200, ErrorMessage = "La dirección no puede exceder 200 caracteres")]
        public string Address { get; set; } = string.Empty;

        [Phone(ErrorMessage = "Formato de teléfono inválido")]
        public string Phone { get; set; } = string.Empty;

        [Required(ErrorMessage = "El nombre del contacto es requerido")]
        [StringLength(50, ErrorMessage = "El nombre no puede exceder 50 caracteres")]
        public string ContactFirstName { get; set; } = string.Empty;

        [Required(ErrorMessage = "Los apellidos del contacto son requeridos")]
        [StringLength(50, ErrorMessage = "Los apellidos no pueden exceder 50 caracteres")]
        public string ContactLastName { get; set; } = string.Empty;

        [Required(ErrorMessage = "El email del contacto es requerido")]
        [EmailAddress(ErrorMessage = "Formato de email inválido")]
        public string ContactEmail { get; set; } = string.Empty;

        [Phone(ErrorMessage = "Formato de teléfono inválido")]
        public string ContactPhone { get; set; } = string.Empty;

        [StringLength(100, ErrorMessage = "El cargo no puede exceder 100 caracteres")]
        public string ContactPosition { get; set; } = string.Empty;

        [Required(ErrorMessage = "Debe seleccionar un tipo de licencia")]
        public string LicenseType { get; set; } = "Professional";

        [Range(0, 10000, ErrorMessage = "El número de empleados debe estar entre 0 y 10000")]
        public int MaxEmployees { get; set; } = 50;

        public bool IsActive { get; set; } = true;
        public bool SendWelcomeEmail { get; set; } = true;
        public bool CreateSampleData { get; set; } = false;
    }
}