@* Ruta: Sphere.Admin.Client/Pages/Profile/Index.razor *@
@page "/profile"
@using Sphere.Admin.Client.Services
@using Shared.Models.DTOs.Auth
@inject ApiService ApiService
@inject AuthService AuthService
@inject NotificationService NotificationService
@inject NavigationManager Navigation

<PageTitle>Mi Perfil | Sphere Admin</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="pa-6">
    <!-- Header -->
    <div class="d-flex justify-space-between align-center mb-6">
        <div>
            <MudText Typo="Typo.h4" Class="mud-text-primary font-weight-bold">
                Mi Perfil
            </MudText>
            <MudText Typo="Typo.body1" Class="mud-text-secondary">
                Gestiona tu información personal y preferencias
            </MudText>
        </div>
        
        <MudButton Variant="Variant.Filled"
                   Color="Color.Primary"
                   StartIcon="@Icons.Material.Filled.Edit"
                   OnClick="@(() => _editMode = !_editMode)">
            @(_editMode ? "Cancelar Edición" : "Editar Perfil")
        </MudButton>
    </div>

    @if (_loading)
    {
        <div class="d-flex justify-center align-center" style="height: 400px;">
            <MudProgressCircular Size="Size.Large" Indeterminate="true" />
        </div>
    }
    else if (_userInfo != null)
    {
        <MudGrid>
            <!-- Información Personal -->
            <MudItem xs="12" md="8">
                <MudCard>
                    <MudCardHeader>
                        <MudText Typo="Typo.h6">Información Personal</MudText>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudForm @ref="_form" @bind-IsValid="@_isValid" ReadOnly="@(!_editMode)">
                            <MudGrid>
                                <MudItem xs="12" md="6">
                                    <MudTextField T="string" 
                                                  @bind-Value="_userInfo.FirstName" 
                                                  Label="Nombre"
                                                  Variant="Variant.Outlined"
                                                  Required="true"
                                                  RequiredError="El nombre es requerido"
                                                  Disabled="@(!_editMode)" />
                                </MudItem>
                                
                                <MudItem xs="12" md="6">
                                    <MudTextField T="string" 
                                                  @bind-Value="_userInfo.LastName" 
                                                  Label="Apellidos"
                                                  Variant="Variant.Outlined"
                                                  Required="true"
                                                  RequiredError="Los apellidos son requeridos"
                                                  Disabled="@(!_editMode)" />
                                </MudItem>
                                
                                <MudItem xs="12">
                                    <MudTextField T="string" 
                                                  Value="_userInfo.Email" 
                                                  Label="Correo Electrónico"
                                                  Variant="Variant.Outlined"
                                                  Disabled="true"
                                                  HelperText="El email no puede ser modificado" />
                                </MudItem>
                                
                                <MudItem xs="12" md="6">
                                    <MudTextField T="string" 
                                                  @bind-Value="_phoneNumber" 
                                                  Label="Teléfono"
                                                  Variant="Variant.Outlined"
                                                  Disabled="@(!_editMode)" />
                                </MudItem>
                                
                                <MudItem xs="12" md="6">
                                    <MudTextField T="string" 
                                                  @bind-Value="_position" 
                                                  Label="Cargo"
                                                  Variant="Variant.Outlined"
                                                  Disabled="@(!_editMode)" />
                                </MudItem>
                            </MudGrid>
                        </MudForm>
                    </MudCardContent>
                    
                    @if (_editMode)
                    {
                        <MudCardActions>
                            <MudButton Color="Color.Primary" 
                                       Variant="Variant.Filled"
                                       Disabled="@(!_isValid || _saving)"
                                       OnClick="SaveProfileAsync">
                                @if (_saving)
                                {
                                    <MudProgressCircular Size="Size.Small" Indeterminate="true" Class="mr-2" />
                                }
                                Guardar Cambios
                            </MudButton>
                            <MudButton Color="Color.Default" 
                                       OnClick="CancelEdit">
                                Cancelar
                            </MudButton>
                        </MudCardActions>
                    }
                </MudCard>

                <!-- Preferencias -->
                <MudCard Class="mt-6">
                    <MudCardHeader>
                        <MudText Typo="Typo.h6">Preferencias</MudText>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudGrid>
                            <MudItem xs="12" md="6">
                                <MudSelect T="string" 
                                           @bind-Value="_language" 
                                           Label="Idioma"
                                           Variant="Variant.Outlined">
                                    <MudSelectItem Value="@("es")">Español</MudSelectItem>
                                    <MudSelectItem Value="@("en")">English</MudSelectItem>
                                    <MudSelectItem Value="@("fr")">Français</MudSelectItem>
                                    <MudSelectItem Value="@("pt")">Português</MudSelectItem>
                                </MudSelect>
                            </MudItem>
                            
                            <MudItem xs="12" md="6">
                                <MudSelect T="string" 
                                           @bind-Value="_timezone" 
                                           Label="Zona Horaria"
                                           Variant="Variant.Outlined">
                                    <MudSelectItem Value="@("Europe/Madrid")">Madrid (GMT+1)</MudSelectItem>
                                    <MudSelectItem Value="@("America/New_York")">Nueva York (GMT-5)</MudSelectItem>
                                    <MudSelectItem Value="@("America/Mexico_City")">Ciudad de México (GMT-6)</MudSelectItem>
                                    <MudSelectItem Value="@("America/Buenos_Aires")">Buenos Aires (GMT-3)</MudSelectItem>
                                </MudSelect>
                            </MudItem>
                            
                            <MudItem xs="12" md="6">
                                <MudSelect T="string" 
                                           @bind-Value="_dateFormat" 
                                           Label="Formato de Fecha"
                                           Variant="Variant.Outlined">
                                    <MudSelectItem Value="@("dd/MM/yyyy")">DD/MM/AAAA</MudSelectItem>
                                    <MudSelectItem Value="@("MM/dd/yyyy")">MM/DD/AAAA</MudSelectItem>
                                    <MudSelectItem Value="@("yyyy-MM-dd")">AAAA-MM-DD</MudSelectItem>
                                </MudSelect>
                            </MudItem>
                            
                            <MudItem xs="12" md="6">
                                <MudSwitch @bind-Value="_emailNotifications" 
                                           Label="Notificaciones por Email"
                                           Color="Color.Primary" />
                            </MudItem>
                        </MudGrid>
                    </MudCardContent>
                </MudCard>
            </MudItem>

            <!-- Sidebar -->
            <MudItem xs="12" md="4">
                <!-- Avatar y Estado -->
                <MudCard>
                    <MudCardContent Class="text-center">
                        <MudAvatar Size="Size.Large" 
                                   Style="width: 120px; height: 120px; margin: 0 auto;"
                                   Color="Color.Primary">
                            @(_userInfo.FirstName.FirstOrDefault())@(_userInfo.LastName.FirstOrDefault())
                        </MudAvatar>
                        
                        <MudText Typo="Typo.h5" Class="mt-4">
                            @_userInfo.FullName
                        </MudText>
                        
                        <MudText Typo="Typo.body2" Color="Color.Secondary">
                            @_userInfo.Email
                        </MudText>
                        
                        <MudChip Color="Color.Success" 
                                 Size="Size.Small" 
                                 Class="mt-2"
                                 T="string">
                            <MudIcon Icon="@Icons.Material.Filled.CheckCircle" Size="Size.Small" Class="mr-1" />
                            Cuenta Activa
                        </MudChip>
                        
                        <MudDivider Class="my-4" />
                        
                        <div class="text-left">
                            <MudText Typo="Typo.caption" Color="Color.Secondary">
                                Último acceso
                            </MudText>
                            <MudText Typo="Typo.body2">
                                @(_userInfo.LastLogin?.ToString("dd/MM/yyyy HH:mm") ?? "N/A")
                            </MudText>
                            @* Ruta: Sphere.Admin.Client/Pages/Profile/Index.razor - Continuación *@
                            
                            <MudText Typo="Typo.caption" Color="Color.Secondary" Class="mt-3">
                                Miembro desde
                            </MudText>
                            <MudText Typo="Typo.body2">
                                @_userInfo.CreatedAt.ToString("dd/MM/yyyy")
                            </MudText>
                        </div>
                    </MudCardContent>
                </MudCard>

                <!-- Acciones Rápidas -->
                <MudCard Class="mt-4">
                    <MudCardHeader>
                        <MudText Typo="Typo.h6">Acciones Rápidas</MudText>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudStack Spacing="2">
                            <MudButton Variant="Variant.Outlined"
                                       Color="Color.Primary"
                                       StartIcon="@Icons.Material.Filled.Lock"
                                       FullWidth="true"
                                       OnClick="@(() => Navigation.NavigateTo("/profile/security"))">
                                Cambiar Contraseña
                            </MudButton>
                            
                            <MudButton Variant="Variant.Outlined"
                                       Color="Color.Primary"
                                       StartIcon="@Icons.Material.Filled.Security"
                                       FullWidth="true"
                                       OnClick="@(() => Navigation.NavigateTo("/profile/security"))">
                                Configuración de Seguridad
                            </MudButton>
                            
                            <MudButton Variant="Variant.Outlined"
                                       Color="Color.Primary"
                                       StartIcon="@Icons.Material.Filled.GetApp"
                                       FullWidth="true"
                                       OnClick="DownloadDataAsync">
                                Descargar Mis Datos
                            </MudButton>
                            
                            <MudDivider Class="my-2" />
                            
                            <MudButton Variant="Variant.Outlined"
                                       Color="Color.Warning"
                                       StartIcon="@Icons.Material.Filled.Logout"
                                       FullWidth="true"
                                       OnClick="LogoutAsync">
                                Cerrar Sesión
                            </MudButton>
                        </MudStack>
                    </MudCardContent>
                </MudCard>

                <!-- Configuración de Tema -->
                <MudCard Class="mt-4">
                    <MudCardHeader>
                        <MudText Typo="Typo.h6">Apariencia</MudText>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudRadioGroup T="string" @bind-SelectedOption="_theme">
                            <MudRadio T="string" Option="@("Light")" Color="Color.Primary">
                                <MudText Typo="Typo.body2">
                                    <MudIcon Icon="@Icons.Material.Filled.LightMode" Size="Size.Small" Class="mr-2" />
                                    Tema Claro
                                </MudText>
                            </MudRadio>
                            <MudRadio T="string" Option="@("Dark")" Color="Color.Primary">
                                <MudText Typo="Typo.body2">
                                    <MudIcon Icon="@Icons.Material.Filled.DarkMode" Size="Size.Small" Class="mr-2" />
                                    Tema Oscuro
                                </MudText>
                            </MudRadio>
                            <MudRadio T="string" Option="@("Auto")" Color="Color.Primary">
                                <MudText Typo="Typo.body2">
                                    <MudIcon Icon="@Icons.Material.Filled.BrightnessAuto" Size="Size.Small" Class="mr-2" />
                                    Automático
                                </MudText>
                            </MudRadio>
                        </MudRadioGroup>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        </MudGrid>

        <!-- Sección de Actividad Reciente -->
        <MudCard Class="mt-6">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">Actividad Reciente</MudText>
                </CardHeaderContent>
                <CardHeaderActions>
                    <MudIconButton Icon="@Icons.Material.Filled.Refresh" 
                                   Color="Color.Default"
                                   OnClick="LoadRecentActivity" />
                </CardHeaderActions>
            </MudCardHeader>
            <MudCardContent>
                @if (_recentActivity?.Any() == true)
                {
                    <MudTimeline TimelinePosition="TimelinePosition.Start">
                        @foreach (var activity in _recentActivity.Take(5))
                        {
                            <MudTimelineItem Color="Color.Primary" Size="Size.Small">
                                <ItemContent>
                                    <MudText Typo="Typo.body2">@activity.Description</MudText>
                                    <MudText Typo="Typo.caption" Color="Color.Secondary">
                                        @activity.Timestamp.ToString("dd/MM/yyyy HH:mm")
                                    </MudText>
                                </ItemContent>
                            </MudTimelineItem>
                        }
                    </MudTimeline>
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Secondary" Align="Align.Center">
                        No hay actividad reciente
                    </MudText>
                }
            </MudCardContent>
        </MudCard>

        <!-- Diálogo de confirmación para cerrar sesión -->
        <MudDialog @bind-IsVisible="_showLogoutDialog">
            <DialogContent>
                <MudText>¿Estás seguro de que deseas cerrar sesión?</MudText>
            </DialogContent>
            <DialogActions>
                <MudButton OnClick="@(() => _showLogoutDialog = false)">Cancelar</MudButton>
                <MudButton Color="Color.Warning" Variant="Variant.Filled" OnClick="ConfirmLogout">
                    Cerrar Sesión
                </MudButton>
            </DialogActions>
        </MudDialog>
    }
    else
    {
        <MudAlert Severity="Severity.Error">
            No se pudo cargar la información del perfil. Por favor, intenta nuevamente.
        </MudAlert>
    }
</MudContainer>

@code {
    private MudForm _form = default!;
    private bool _isValid;
    private bool _loading = true;
    private bool _saving = false;
    private bool _editMode = false;
    private bool _showLogoutDialog = false;
    
    private UserInfo? _userInfo;
    private UserInfo? _originalUserInfo;
    private List<ActivityLog>? _recentActivity;
    
    // Campos adicionales del perfil
    private string _phoneNumber = string.Empty;
    private string _position = string.Empty;
    private string _language = "es";
    private string _timezone = "Europe/Madrid";
    private string _dateFormat = "dd/MM/yyyy";
    private string _theme = "Light";
    private bool _emailNotifications = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadUserProfile();
        await LoadRecentActivity();
    }

    private async Task LoadUserProfile()
    {
        try
        {
            _loading = true;
            _userInfo = await ApiService.GetCurrentUserAsync();
            
            if (_userInfo != null)
            {
                _originalUserInfo = new UserInfo
                {
                    FirstName = _userInfo.FirstName,
                    LastName = _userInfo.LastName,
                    Email = _userInfo.Email
                };
            }
        }
        catch (Exception ex)
        {
            NotificationService.ShowError("Error cargando el perfil");
            Console.WriteLine($"Error: {ex.Message}");
        }
        finally
        {
            _loading = false;
        }
    }

    private async Task LoadRecentActivity()
    {
        try
        {
            _recentActivity = await ApiService.GetRecentActivityAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error cargando actividad: {ex.Message}");
        }
    }

    private async Task SaveProfileAsync()
    {
        if (!_isValid || _userInfo == null) return;

        try
        {
            _saving = true;
            
            // Aquí iría la llamada a la API para guardar el perfil
            await Task.Delay(1000); // Simulación
            
            NotificationService.ShowSuccess("Perfil actualizado correctamente");
            _editMode = false;
            
            // Actualizar el estado de autenticación si es necesario
            await AuthService.RefreshTokenAsync();
        }
        catch (Exception ex)
        {
            NotificationService.ShowError("Error al guardar el perfil");
            Console.WriteLine($"Error: {ex.Message}");
        }
        finally
        {
            _saving = false;
        }
    }

    private void CancelEdit()
    {
        if (_userInfo != null && _originalUserInfo != null)
        {
            _userInfo.FirstName = _originalUserInfo.FirstName;
            _userInfo.LastName = _originalUserInfo.LastName;
        }
        _editMode = false;
    }

    private async Task DownloadDataAsync()
    {
        try
        {
            NotificationService.ShowInfo("Preparando descarga de datos...");
            
            // Aquí iría la lógica para descargar los datos del usuario
            await Task.Delay(2000); // Simulación
            
            NotificationService.ShowSuccess("Datos descargados correctamente");
        }
        catch (Exception ex)
        {
            NotificationService.ShowError("Error al descargar los datos");
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private void LogoutAsync()
    {
        _showLogoutDialog = true;
    }

    private async Task ConfirmLogout()
    {
        _showLogoutDialog = false;
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/login");
    }

    private class ActivityLog
    {
        public string Description { get; set; } = string.Empty;
        public DateTime Timestamp { get; set; }
    }
}