@page "/"
@inject ApiService ApiService

<PageTitle>Dashboard - Sphere Admin</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="mt-4">
    <!-- Header del Dashboard -->
    <div class="mb-6">
        <MudText Typo="Typo.h3" Class="mb-2">
            <MudIcon Icon="@Icons.Material.Filled.Dashboard" Class="me-3" />
            Dashboard de Administración
        </MudText>
        <MudText Typo="Typo.body1" Color="Color.Secondary">
            Panel de control principal para la gestión de Sphere Time Control
        </MudText>
    </div>

    <!-- Cards de Estadísticas -->
    <MudGrid Class="mb-6">
        <!-- Total Tenants -->
        <MudItem xs="12" sm="6" md="3">
            <MudCard Class="pa-4" Style="height: 140px;">
                <MudCardContent Class="d-flex align-center justify-space-between pa-0">
                    <div>
                        <MudText Typo="Typo.h4" Color="Color.Primary">
                            @totalTenants
                        </MudText>
                        <MudText Typo="Typo.body2" Color="Color.Secondary">
                            Tenants Activos
                        </MudText>
                        <MudText Typo="Typo.caption" Color="Color.Success">
                            +@newTenantsThisMonth este mes
                        </MudText>
                    </div>
                    <MudAvatar Color="Color.Primary" Size="Size.Large">
                        <MudIcon Icon="@Icons.Material.Filled.Business" Size="Size.Large" />
                    </MudAvatar>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <!-- Total Usuarios -->
        <MudItem xs="12" sm="6" md="3">
            <MudCard Class="pa-4" Style="height: 140px;">
                <MudCardContent Class="d-flex align-center justify-space-between pa-0">
                    <div>
                        <MudText Typo="Typo.h4" Color="Color.Success">
                            @totalUsers
                        </MudText>
                        <MudText Typo="Typo.body2" Color="Color.Secondary">
                            Usuarios Totales
                        </MudText>
                        <MudText Typo="Typo.caption" Color="Color.Info">
                            @activeUsersToday activos hoy
                        </MudText>
                    </div>
                    <MudAvatar Color="Color.Success" Size="Size.Large">
                        <MudIcon Icon="@Icons.Material.Filled.People" Size="Size.Large" />
                    </MudAvatar>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <!-- Ingresos Mensuales -->
        <MudItem xs="12" sm="6" md="3">
            <MudCard Class="pa-4" Style="height: 140px;">
                <MudCardContent Class="d-flex align-center justify-space-between pa-0">
                    <div>
                        <MudText Typo="Typo.h4" Color="Color.Warning">
                            €@monthlyRevenue.ToString("N0")
                        </MudText>
                        <MudText Typo="Typo.body2" Color="Color.Secondary">
                            Ingresos del Mes
                        </MudText>
                        <MudText Typo="Typo.caption" Color="Color.Success">
                            +@revenueGrowth% vs anterior
                        </MudText>
                    </div>
                    <MudAvatar Color="Color.Warning" Size="Size.Large">
                        <MudIcon Icon="@Icons.Material.Filled.Euro" Size="Size.Large" />
                    </MudAvatar>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <!-- Licencias Activas -->
        <MudItem xs="12" sm="6" md="3">
            <MudCard Class="pa-4" Style="height: 140px;">
                <MudCardContent Class="d-flex align-center justify-space-between pa-0">
                    <div>
                        <MudText Typo="Typo.h4" Color="Color.Info">
                            @activeLicenses
                        </MudText>
                        <MudText Typo="Typo.body2" Color="Color.Secondary">
                            Licencias Activas
                        </MudText>
                        <MudText Typo="Typo.caption" Color="Color.Warning">
                            @expiringSoon por expirar
                        </MudText>
                    </div>
                    <MudAvatar Color="Color.Info" Size="Size.Large">
                        <MudIcon Icon="@Icons.Material.Filled.Badge" Size="Size.Large" />
                    </MudAvatar>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>

    <MudGrid>
        <!-- Lista de Tenants Recientes -->
        <MudItem xs="12" lg="8">
            <MudCard Class="pa-4">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">
                            <MudIcon Icon="@Icons.Material.Filled.Business" Class="me-2" />
                            Tenants Recientes
                        </MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudButton Variant="Variant.Text" 
                                   Color="Color.Primary" 
                                   StartIcon="@Icons.Material.Filled.Add"
                                   Href="/tenants/create">
                            Nuevo Tenant
                        </MudButton>
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardContent Class="pa-0">
                    <MudTable Items="@recentTenants" 
                              Hover="true" 
                              Dense="true"
                              Loading="@loadingTenants">
                        <HeaderContent>
                            <MudTh>Empresa</MudTh>
                            <MudTh>Usuarios</MudTh>
                            <MudTh>Estado</MudTh>
                            <MudTh>Creado</MudTh>
                            <MudTh>Acciones</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd>
                                <div class="d-flex align-center">
                                    <MudAvatar Size="Size.Small" Class="me-3">
                                        @context.Name.Substring(0, 1).ToUpper()
                                    </MudAvatar>
                                    <div>
                                        <MudText Typo="Typo.body2">@context.Name</MudText>
                                        <MudText Typo="Typo.caption" Color="Color.Secondary">
                                            @($"{context.Subdomain}.spheretimecontrol.com")
                                        </MudText>
                                    </div>
                                </div>
                            </MudTd>
                            <MudTd>
                                <MudText Typo="Typo.body2">@context.EmployeeCount</MudText>
                            </MudTd>
                            <MudTd>
                                <MudText Typo="Typo.caption" 
                                         Color="@(context.IsActive ? Color.Success : Color.Error)">
                                    @(context.IsActive ? "Activo" : "Inactivo")
                                </MudText>
                            </MudTd>
                            <MudTd>
                                <MudText Typo="Typo.body2">
                                    @context.CreatedAt.ToString("dd/MM/yyyy")
                                </MudText>
                            </MudTd>
                            <MudTd>
                                <MudIconButton Icon="@Icons.Material.Filled.Visibility" 
                                               Size="Size.Small" 
                                               Color="Color.Primary"
                                               Href="@($"/tenants/{context.Id}")" />
                                <MudIconButton Icon="@Icons.Material.Filled.Edit" 
                                               Size="Size.Small" 
                                               Color="Color.Secondary"
                                               Href="@($"/tenants/{context.Id}/edit")" />
                            </MudTd>
                        </RowTemplate>
                        <NoRecordsContent>
                            <MudText Color="Color.Secondary" Typo="Typo.body2" Class="text-center">
                                No hay tenants registrados
                            </MudText>
                        </NoRecordsContent>
                    </MudTable>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <!-- Actividad del Sistema -->
        <MudItem xs="12" lg="4">
            <MudCard Class="pa-4" Style="height: 500px;">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">
                            <MudIcon Icon="@Icons.Material.Filled.Timeline" Class="me-2" />
                            Actividad Reciente
                        </MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudTimeline TimelineOrientation="TimelineOrientation.Vertical">
                        @foreach (var activity in recentActivities)
                        {
                            <MudTimelineItem Color="@GetActivityColor(activity.Type)" 
                                             Size="Size.Small">
                                <ItemContent>
                                    <MudText Typo="Typo.body2" Class="mb-1">
                                        @activity.Description
                                    </MudText>
                                    <MudText Typo="Typo.caption" Color="Color.Secondary">
                                        @activity.CreatedAt.ToString("HH:mm - dd/MM")
                                    </MudText>
                                </ItemContent>
                            </MudTimelineItem>
                        }
                    </MudTimeline>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    // Datos del Dashboard
    private int totalTenants = 0;
    private int totalUsers = 0;
    private decimal monthlyRevenue = 0;
    private int activeLicenses = 0;
    private int newTenantsThisMonth = 0;
    private int activeUsersToday = 0;
    private decimal revenueGrowth = 0;
    private int expiringSoon = 0;

    // Datos de las tablas
    private List<TenantSummary> recentTenants = new();
    private List<ActivityLog> recentActivities = new();
    
    private bool loadingTenants = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadDashboardData();
    }

    private async Task LoadDashboardData()
    {
        try
        {
            // Simular carga de datos (reemplazar con llamadas reales a la API)
            await Task.Delay(1000);

            // Estadísticas principales
            totalTenants = 24;
            totalUsers = 847;
            monthlyRevenue = 15420;
            activeLicenses = 156;
            newTenantsThisMonth = 3;
            activeUsersToday = 234;
            revenueGrowth = 12.5m;
            expiringSoon = 8;

            // Tenants recientes
            recentTenants = new List<TenantSummary>
            {
                new() { Id = 1, Name = "TechCorp Solutions", Subdomain = "techcorp", EmployeeCount = 45, IsActive = true, CreatedAt = DateTime.Now.AddDays(-5) },
                new() { Id = 2, Name = "Marketing Plus", Subdomain = "marketingplus", EmployeeCount = 28, IsActive = true, CreatedAt = DateTime.Now.AddDays(-12) },
                new() { Id = 3, Name = "Construcciones Silva", Subdomain = "silva", EmployeeCount = 67, IsActive = true, CreatedAt = DateTime.Now.AddDays(-18) },
                new() { Id = 4, Name = "Consultoría Digital", Subdomain = "consultoria", EmployeeCount = 15, IsActive = false, CreatedAt = DateTime.Now.AddDays(-25) },
                new() { Id = 5, Name = "Retail Express", Subdomain = "retail", EmployeeCount = 112, IsActive = true, CreatedAt = DateTime.Now.AddDays(-30) }
            };

            // Actividades recientes
            recentActivities = new List<ActivityLog>
            {
                new() { Type = "tenant_created", Description = "Nuevo tenant: TechCorp Solutions", CreatedAt = DateTime.Now.AddHours(-2) },
                new() { Type = "license_renewed", Description = "Licencia renovada: Marketing Plus", CreatedAt = DateTime.Now.AddHours(-4) },
                new() { Type = "user_registered", Description = "45 nuevos usuarios registrados", CreatedAt = DateTime.Now.AddHours(-6) },
                new() { Type = "payment_received", Description = "Pago recibido: €2,450", CreatedAt = DateTime.Now.AddHours(-8) },
                new() { Type = "system_update", Description = "Sistema actualizado a v2.1.3", CreatedAt = DateTime.Now.AddHours(-12) }
            };

            loadingTenants = false;
        }
        catch (Exception ex)
        {
            // Manejar errores
            Console.WriteLine($"Error loading dashboard data: {ex.Message}");
            loadingTenants = false;
        }
    }

    private Color GetActivityColor(string activityType)
    {
        return activityType switch
        {
            "tenant_created" => Color.Success,
            "license_renewed" => Color.Info,
            "user_registered" => Color.Primary,
            "payment_received" => Color.Warning,
            "system_update" => Color.Secondary,
            _ => Color.Default
        };
    }

    // Clases para los datos
    public class TenantSummary
    {
        public int Id { get; set; }
        public string Name { get; set; } = string.Empty;
        public string Subdomain { get; set; } = string.Empty;
        public int EmployeeCount { get; set; }
        public bool IsActive { get; set; }
        public DateTime CreatedAt { get; set; }
    }

    public class ActivityLog
    {
        public string Type { get; set; } = string.Empty;
        public string Description { get; set; } = string.Empty;
        public DateTime CreatedAt { get; set; }
    }
}