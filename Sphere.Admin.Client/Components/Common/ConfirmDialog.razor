@using MudBlazor

<MudDialog>
    <DialogContent>
        <div class="d-flex align-center mb-4">
            <MudIcon Icon="@GetIcon()" 
                     Color="@Color" 
                     Size="Size.Large" 
                     Class="mr-4" />
            <div>
                <MudText Typo="Typo.h6" Class="font-weight-bold mb-2">
                    @Title
                </MudText>
                <MudText Typo="Typo.body1" Style="white-space: pre-line;">
                    @ContentText
                </MudText>
            </div>
        </div>
        
        @if (!string.IsNullOrEmpty(WarningText))
        {
            <MudAlert Severity="Severity.Warning" Class="mb-4">
                @WarningText
            </MudAlert>
        }
        
        @if (RequireConfirmation && !string.IsNullOrEmpty(ConfirmationPhrase))
        {
            <MudTextField @bind-Value="_confirmationInput"
                          Label="@($"Para confirmar, escriba: {ConfirmationPhrase}")"
                          Variant="Variant.Outlined"
                          FullWidth="true"
                          Class="mb-4" />
        }
    </DialogContent>
    
    <DialogActions>
        <MudButton OnClick="Cancel">
            @CancelText
        </MudButton>
        
        <MudButton Color="@Color" 
                   Variant="Variant.Filled"
                   OnClick="Submit"
                   Disabled="@(!CanConfirm)"
                   Loading="@IsLoading">
            @ButtonText
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] 
    private MudDialogInstance? MudDialog { get; set; }

    [Parameter] 
    public string ContentText { get; set; } = "¿Está seguro de que desea continuar?";
    
    [Parameter] 
    public string Title { get; set; } = "Confirmar Acción";
    
    [Parameter] 
    public string ButtonText { get; set; } = "Confirmar";
    
    [Parameter] 
    public string CancelText { get; set; } = "Cancelar";
    
    [Parameter] 
    public Color Color { get; set; } = Color.Primary;
    
    [Parameter] 
    public string? WarningText { get; set; }
    
    [Parameter] 
    public bool RequireConfirmation { get; set; } = false;
    
    [Parameter] 
    public string ConfirmationPhrase { get; set; } = string.Empty;
    
    [Parameter] 
    public bool IsLoading { get; set; } = false;

    private string _confirmationInput = string.Empty;

    private bool CanConfirm => 
        !RequireConfirmation || 
        string.Equals(_confirmationInput, ConfirmationPhrase, StringComparison.OrdinalIgnoreCase);

    private void Submit()
    {
        if (CanConfirm)
        {
            MudDialog?.Close(DialogResult.Ok(true));
        }
    }

    private void Cancel()
    {
        MudDialog?.Cancel();
    }

    private string GetIcon()
    {
        return Color switch
        {
            Color.Error => Icons.Material.Filled.Warning,
            Color.Warning => Icons.Material.Filled.Info,
            Color.Success => Icons.Material.Filled.CheckCircle,
            _ => Icons.Material.Filled.HelpOutline
        };
    }
}