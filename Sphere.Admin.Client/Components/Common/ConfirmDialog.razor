@* Ruta: Sphere.Admin.Client/Components/Common/ConfirmDialog.razor *@
@using MudBlazor

<MudDialog>
    <DialogContent>
        <div class="d-flex align-center mb-4">
            <MudIcon Icon="@GetIcon()" 
                     Color="@GetColor()" 
                     Size="Size.Large" 
                     Class="mr-3" />
            <div>
                <MudText Typo="Typo.h6">@Title</MudText>
                @if (!string.IsNullOrEmpty(Subtitle))
                {
                    <MudText Typo="Typo.body2" Color="Color.Secondary">@Subtitle</MudText>
                }
            </div>
        </div>
        
        @if (!string.IsNullOrEmpty(Message))
        {
            <MudText Class="mb-4">@Message</MudText>
        }
        
        @if (ShowWarning)
        {
            <MudAlert Severity="Severity.Warning" Class="mb-4">
                @WarningMessage
            </MudAlert>
        }
        
        @if (RequireConfirmation)
        {
            <MudTextField @bind-Value="_confirmationText" 
                          Label="@($"Escribe '{ConfirmationWord}' para confirmar")"
                          Variant="Variant.Outlined"
                          FullWidth="true"
                          Margin="Margin.Dense" />
        }
    </DialogContent>
    
    <DialogActions>
        <MudButton OnClick="Cancel">Cancelar</MudButton>
        <MudButton Color="@GetColor()" 
                   Variant="Variant.Filled" 
                   OnClick="Confirm"
                   Disabled="@(!CanConfirm())">
            @ConfirmButtonText
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;
    
    [Parameter] public string Title { get; set; } = "Confirmar acción";
    [Parameter] public string? Subtitle { get; set; }
    [Parameter] public string? Message { get; set; }
    [Parameter] public string ConfirmButtonText { get; set; } = "Confirmar";
    [Parameter] public string CancelButtonText { get; set; } = "Cancelar";
    [Parameter] public DialogType Type { get; set; } = DialogType.Confirm;
    [Parameter] public bool ShowWarning { get; set; } = false;
    [Parameter] public string WarningMessage { get; set; } = "Esta acción no se puede deshacer.";
    [Parameter] public bool RequireConfirmation { get; set; } = false;
    [Parameter] public string ConfirmationWord { get; set; } = "CONFIRMAR";
    
    private string _confirmationText = string.Empty;
    
    public enum DialogType
    {
        Confirm,
        Warning,
        Error,
        Success,
        Info
    }
    
    private void Cancel() => MudDialog.Cancel();
    
    private void Confirm()
    {
        if (CanConfirm())
        {
            MudDialog.Close(DialogResult.Ok(true));
        }
    }
    
    private bool CanConfirm()
    {
        if (RequireConfirmation)
        {
            return _confirmationText.Equals(ConfirmationWord, StringComparison.OrdinalIgnoreCase);
        }
        return true;
    }
    
    private string GetIcon()
    {
        return Type switch
        {
            DialogType.Warning => Icons.Material.Filled.Warning,
            DialogType.Error => Icons.Material.Filled.Error,
            DialogType.Success => Icons.Material.Filled.CheckCircle,
            DialogType.Info => Icons.Material.Filled.Info,
            _ => Icons.Material.Filled.Help
        };
    }
    
    private Color GetColor()
    {
        return Type switch
        {
            DialogType.Warning => Color.Warning,
            DialogType.Error => Color.Error,
            DialogType.Success => Color.Success,
            DialogType.Info => Color.Info,
            _ => Color.Primary
        };
    }
}