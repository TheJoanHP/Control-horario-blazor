@* Ruta: Sphere.Admin.Client/Components/Common/BackupCodesDialog.razor *@
@using MudBlazor
@inject IJSRuntime JSRuntime
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudText Typo="Typo.h6" Class="mb-4">
            <MudIcon Icon="@Icons.Material.Filled.Security" Class="mr-2" />
            Códigos de Respaldo
        </MudText>
        
        <MudAlert Severity="Severity.Warning" Class="mb-4">
            <MudText>
                Guarda estos códigos en un lugar seguro. Cada código solo puede usarse una vez.
            </MudText>
        </MudAlert>
        
        <MudPaper Outlined="true" Class="pa-4 mb-4">
            <MudGrid>
                @foreach (var backupCode in BackupCodes)
                {
                    <MudItem xs="6">
                        <MudText Typo="Typo.body1" Class="font-monospace">
                            @backupCode
                        </MudText>
                    </MudItem>
                }
            </MudGrid>
        </MudPaper>
        
        <div class="d-flex justify-space-between">
            <MudButton StartIcon="@Icons.Material.Filled.ContentCopy"
                       Color="Color.Primary"
                       Variant="Variant.Outlined"
                       OnClick="CopyToClipboard">
                Copiar Códigos
            </MudButton>
            
            <MudButton StartIcon="@Icons.Material.Filled.Download"
                       Color="Color.Primary"
                       Variant="Variant.Outlined"
                       OnClick="DownloadCodes">
                Descargar Códigos
            </MudButton>
            
            <MudButton StartIcon="@Icons.Material.Filled.Print"
                       Color="Color.Primary"
                       Variant="Variant.Outlined"
                       OnClick="PrintCodes">
                Imprimir Códigos
            </MudButton>
        </div>
    </DialogContent>
    
    <DialogActions>
        <MudButton Color="Color.Success" 
                   Variant="Variant.Filled" 
                   OnClick="Confirm">
            He Guardado los Códigos
        </MudButton>
    </DialogActions>
</MudDialog>

<style>
    .font-monospace {
        font-family: 'Consolas', 'Courier New', monospace;
        background-color: #f5f5f5;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 0.9rem;
    }
    
    .mud-theme-dark .font-monospace {
        background-color: #2b2b3c;
    }
    
    @@media print {
        * { visibility: hidden; }
        .print-area, .print-area * { visibility: visible; }
        .print-area { position: absolute; left: 0; top: 0; }
    }
</style>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public List<string> BackupCodes { get; set; } = new();

    protected override void OnInitialized()
    {
        if (!BackupCodes.Any())
        {
            // Generar códigos de ejemplo si no se proporcionan
            BackupCodes = GenerateBackupCodes();
        }
    }

    private List<string> GenerateBackupCodes()
    {
        var codes = new List<string>();
        var random = new Random();
        for (int i = 0; i < 10; i++)
        {
            codes.Add($"{random.Next(1000, 9999)}-{random.Next(1000, 9999)}");
        }
        return codes;
    }

    private async Task CopyToClipboard()
    {
        var codesText = string.Join("\n", BackupCodes);
        await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", codesText);
        Snackbar.Add("Códigos copiados al portapapeles", Severity.Success);
    }

    private async Task DownloadCodes()
    {
        var codesText = string.Join("\n", BackupCodes);
        var fileName = $"backup-codes-{DateTime.Now:yyyy-MM-dd}.txt";
        
        await JSRuntime.InvokeVoidAsync("downloadFile", fileName, codesText);
        Snackbar.Add("Archivo descargado", Severity.Success);
    }

    private async Task PrintCodes()
    {
        await JSRuntime.InvokeVoidAsync("window.print");
    }

    private void Confirm()
    {
        MudDialog.Close(DialogResult.Ok(true));
    }
}